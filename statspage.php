<?php 
/*  
This script generates a basic web statistics page based on log files generated by Really-Simple-Traffic-Logger (RSTL) script which are stored in .\data
For more information:   
https://github.com/jorper98/RSTL-Stats-Page

*/
session_start(); 
session_set_cookie_params(3600);
error_reporting(E_ERROR | E_PARSE);
// Change the page password!!
$passw="password";

If ( isset($_GET['action']) &&  $_GET['action']=="logout") {
    session_unset();
    session_destroy();
    goUrl( $_SERVER['PHP_SELF'] );exit;
}


$v="Display";

if (!isset($_SESSION['DisplayDetails']) ){
    $_SESSION['DisplayDetails'] ="Display";
}
Else {
    $v=$_SESSION['DisplayDetails'] ;
}

$ok=False;


?>
<html>
<head>
<style type="text/css">
body {
    font: normal 11px Verdana, Arial, sans-serif;
}
p.serif {
    font-family: "Times New Roman", Times, serif;
}

p.sansserif {
    font-family: Arial, Helvetica, sans-serif;
}
table.table1 {
  width: 80%;
  max-width: 80%;
  vertical-align: top;
border-collapse: collapse;
font-family: Verdana, Geneva, sans-serif;
}

table.table1 tr, td {
border: solid 1px black;
border-collapse: collapse	
font-size: 9px;
}
table.table1 th{
border: solid 3px black;
border-collapse: collapse
font-size: 9px;
}

table.blueTable {
  font-family: Arial, Helvetica, sans-serif;
  border: 1px solid #1C6EA4;
  background-color: #EEEEEE;
  width: 80%;
  text-align: left;
  border-collapse: collapse;
}
table.blueTable td, table.blueTable th {
  border: 1px solid #AAAAAA;
  padding: 3px 2px;
}
table.blueTable tbody td {
  font-size: 11px;
}
table.blueTable tr:nth-child(even) {
  background: #D0E4F5;
}
table.blueTable thead {
  background: #1C6EA4;
  border-bottom: 2px solid #444444;
}
table.blueTable thead th {
  font-size: 11px;
  font-weight: bold;
  color: #FFFFFF;
  border-left: 2px solid #D0E4F5;
}
table.blueTable thead th:first-child {
  border-left: none;
}

table.blueTable tfoot td {
  font-size: 14px;
}
table.blueTable tfoot .links {
  text-align: right;
}
table.blueTable tfoot .links a{
  display: inline-block;
  background: #1C6EA4;
  color: #FFFFFF;
  padding: 2px 8px;
  border-radius: 5px;
}

// * { border: 0; outline: 0; padding: 0; margin: 0; font-family: sans-serif; }
* {font-family: sans-serif;  }
html { position: relative; min-height: 100%; }
.chart { width: 51%; height: 160px; }
.referers { height: 190px; overflow-y: auto; width: 45%; float: right; font-size: 0.8em; white-space: nowrap; overflow-x: hidden;  }
.referers a { text-decoration: none; }
.site { padding-bottom: 30px; margin-bottom: 30px; border-bottom: 1px solid #eee; }
p { border: 0; outline: 0; padding: 0; margin: 0;}
.site h1 { margin-bottom: 0px; }
p.warning { margin-bottom: 10px; }
.code { background-color: #f4f4f4; font-family: monospace; padding: 3px; }
pre { margin-bottom: 10px; }
#content { padding: 10px 10px 60px 10px; }
#footer { margin-top: 80px; color: #333; font-size: 0.8em; position: absolute; bottom: 10px; left: 10px; }
#footer a { color: #333; }
@media (max-width: 600px) { .referers { display: none; } .chart { width: 100%; } }
</style>
<script src="https://www.gstatic.com/charts/loader.js"></script>
</head>
<body>
     <link href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/themes/redmond/jquery-ui.css" rel="stylesheet" type="text/css"/>
  <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.5/jquery.min.js"></script>
  <script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"></script>

  <link href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/themes/redmond/jquery-ui.css" rel="stylesheet" type="text/css"/>
  <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.5/jquery.min.js"></script>
  <script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $("#OpenDialog").click(function () {
                $("#dialog").dialog({modal: true, height: 590, width: 1005 });
            });
        });
    </script>

<script type="text/javascript">
google.charts.load('current', { callback: function () { drawChart(); window.addEventListener('resize', drawChart, false); },  packages:['corechart'] });

function drawChart() {
    var formatDate = new google.visualization.DateFormat({ pattern: 'MMM d' });
    var ticksAxisH;
    function createDataTable(values)
    {
        var dataTable = new google.visualization.DataTable();
        dataTable.addColumn('date', 'Day');
        dataTable.addColumn('number', 'Unique visitors');
        var today = new Date();
        ticksAxisH = [];
        for (var i = 0; i < values.length; i++) {
            var rowDate = new Date(today - i * 24 * 3600 * 1000);
            var xValue = { v: rowDate, f: formatDate.formatValue(rowDate) };
            var yValue = parseInt(values[i]);
            dataTable.addRow([xValue, yValue]);
            if ((i % 7) === 0) { ticksAxisH.push(xValue); }      // add tick every 7 days
        }
        return dataTable;
    }

    var charts = document.getElementsByClassName("chart");
    for(var i = 0; i < charts.length; i++)
    {
        var chart = new google.visualization.AreaChart(charts[i]);
        var data = charts[i].getAttribute('data').split(',');
        var dataTable = createDataTable(data);
        chart.draw(dataTable, {
            hAxis: { gridlines: { color: '#f5f5f5' }, ticks: ticksAxisH },
            legend: 'none',
            pointSize: 6,
            lineWidth: 3,
            colors: ['#058dc7'],
            areaOpacity: 0.1,
            vAxis: { gridlines: { color: '#f5f5f5' } },
        });  
    }
}
</script>

<?php

function goUrl($path) 
{
?>
<script type="text/javascript">
	window.location.href = '<?php echo $path; ?>';
 </script>
<?php
}

Function combineCSVfiles() {
        // takes all csv files in ./data and creates a single combined file with one header in the format needd to next step (summarize())
        
     $dir = "data/cy_archive*"; //  change this if source data files are in different locaiton.
     // temporary files   Will be erased!
     $finalfile='final-mastercsv.log';
     $outfile="mastercsv.csv";
     $outfile2="mastercsv2.csv";

     $handle = fopen($outfile , 'w');
    // echo "<br>Processing....<br>";      
     foreach (glob($dir) as $file) {
         // echo "--".$file;
          if (strpos($file, '.csv') !== false) {
               //   fputcsv($handle, file($file));
                fwrite($handle,  file_get_contents($file));
               
               }
          else {
               //echo "Nope";
          }
     }
     fclose($handle);
     
    $lines = file($outfile);
    $lines = array_unique($lines);
    file_put_contents($outfile2 , implode($lines));
    
    $row = 1;
    $fp = fopen($finalfile, 'w');
    // csv separator for output file
    $separator = "," ;
    $separator = "\t" ;
    
    if (($handle = fopen($outfile2, "r")) !== FALSE) {
        while (($data = fgetcsv($handle, 1000, ",")) !== FALSE) {
            if ($row>1) { // skip row 1 (headers)
            $num = count($data);
            // echo "<p> $num fields in line $row: <br /></p>\n";
           for ($c=0; $c < $num; $c++) {
          //      echo $data[$c] . $separator;
            }
            // echo "<br />\n";
            $timestamp= strtotime($data[0]." ".$data[1]);
            $txt =  $timestamp.$separator;
            
             // $txt .= $data[0]." ".$data[1].$separator;
             // $txt .= date('Y-m-d', $timestamp).$separator;
            $txt .= $data[2].$separator.$data[10].$separator.$data[5].$separator.$data[4];
            fwrite($fp, $txt  . "\n");
            }
            $row++;
        }
        fclose($handle);
        fclose ($fp);
    }
    
    // erase temporary files 
    unlink($outfile);
    unlink($outfile2);
    
}


Function summarize()  {
    /*  this function takes a single formmated .log file and creates 3 files: 
            Filename.visitiors  -   Array of number of visitors per day
            filename.referers   -   Array of unique Referers
            .lastsumarized      - Stub file to indicate last summarized timestamp
        Adapter from TinyAnalytics code.    
            
    */      
       
          $logfile="final-mastercsv.log";
          $visitorsfile = substr($logfile,0,-4).'.visitors';
          $referersfile = substr($logfile,0,-4).'.referers';
          $tmpfile = $logfile.'.tmp';
          // $ipTracker=Array();
          $referers =Array();
          
          // Check we can open the log file, then process it 
          if (($log = fopen($logfile, "r")) !== FALSE) {
        
            // While we have rows available in the log file, do stuff
            while (($data = fgetcsv($log, 1000, "\t")) !== FALSE) {
        
              // Assign variables to the data
              $rowdate = date("Y-m-d", $data[0]);
              $ipadr = $data[1];
              $ua = $data[3];
              $referer = $data[4];
        
              // If the User Agent is from a bot, then skip it
              $bots = array('bot', 'crawl', 'slurp', 'spider', 'yandex', 'WordPress', 'AHC', 'jetmon');
              // $bots =array('llak','lll');
              foreach($bots as $bot){
                if (strpos($ua, $bot) !== false) {
                  continue;
                }
              }
              
              // We only count each IP once a day (Unique daily visitors)
                // echo $ipadr,$ipTracker[$rowdate]."<br>";
                // echo $rowdate." / ".$ipTracker[$rowdate];
             if ( !empty($ipTracker[$rowdate])) {
                  if ( in_array($ipadr,$ipTracker[$rowdate]) ) {
                    continue; 
                  }
             }      
              // We only get this far for unique, non-bot data, so let's start recording it
              $visitors[$rowdate]++;
              
              // If we have referer data, add it to the array (if it doesn't yet exist)
             // echo $referer."/".$referers."=".is_array($referers)."<br>";
                  if ( $referer != "" && $referer !="NULL" && !in_array($referer,$referers)) {
                    $referers[] = $referer;
                  }
                 
              // Track the IP per date
              $ipTracker[$rowdate][] = $ipadr;
              
            }
            fclose($log);
            
            // Write the Visitors file
            $writefile = fopen($visitorsfile,"w");
            fwrite($writefile,json_encode($visitors));
            fclose($writefile);
            
            // Write the Referrers file
            $writefile = fopen($referersfile,"w");
            fwrite($writefile,json_encode($referers));
            fclose($writefile);
            
            // Clear our variables for the next site
            unset($visitors);
            unset($referers);
            unset($ipTracker);
          }
       
        // Update the .lastsummarize
        $writefile = fopen('.lastsummarize',"w");
        fwrite($writefile,time());
        fclose($writefile);

}

Echo "<h2>Web Traffic Statistics</h2>";

if (!isset($_SESSION['DSdashboard']) ) {
 if(!isset($_POST['pass']))
    {?>
    <div class="none">
            <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>" >
            Password <input type="password" name="pass"></input><br/>
            <input type="submit" name="submit" value="Go"></input>
            </form>
        </div>
    <?} else {
        if ($_POST['pass']==$passw)
        { $ok = true; $_SESSION["DSdashboard"] ="set"; } else
           {goUrl( $_SERVER['PHP_SELF'] );exit;}
    } 
}else { $ok=true;}

If ($ok) {

echo '<a href="'. $_SERVER['PHP_SELF'].'?action=logout";>click here to log out</a><br>';

combineCSVfiles(); // First step Combine files to create single log file
echo summarize() ;   // Display Graph
?>
<!-- begin of CONTENT DIV -->
<div id="content">
<?php     
$logfilelocation ='./';
$sites = glob("$logfilelocation/*.visitors", GLOB_BRACE);

$site=$logfilelocation."final-mastercsv";
// echo $site;
    $sitename = basename($site, '.visitors');

    
    $referers = '';
    $str = file_get_contents($site . '.referers');
    $urls = json_decode($str, true);
    
    foreach ($urls as $url)
    {
        $url = preg_replace('/[\"<>]+/', '', $url); 
        $displayedurl = preg_replace('#^https?://#', '', $url);
        $displayedurl = $url;
        $referers .= '<p><a href="' . $url . '">' . $displayedurl . '</a></p>' . PHP_EOL;
    }
    $str = file_get_contents($site.'.visitors');
    $visitors = json_decode($str, true);
    $points = '';
    $max = 0;
    for ($i = 0; $i < 30; $i++) 
    {
        $key = date("Y-m-d", time() - $i * 3600 * 24);
        $y = ((isset($visitors[$key])) ? $visitors[$key] : 0);
        $points .= $y . ',';
        $max = max($max, $y);
    }

    echo '<div class="site">' . PHP_EOL
        . '<div class="referers">' . PHP_EOL . $referers . '</div>' . PHP_EOL   
        . '<h4>Last 30 days unique visitors</h4>' . PHP_EOL
        . '<div class="chart" data="' . substr($points, 0, -1) . '"></div>' . PHP_EOL
        . '</div>' . PHP_EOL . PHP_EOL;

$v=     ($v== "Display") ? "Hide" : "Display";
$_SESSION['DisplayDetails'] =$v;

?>
<!-- end of CONTENT DIV -->
 </div>
 
 <!-- a href="<?php $_SERVER['PHP_SELF']?>?v=<?php echo $v?>"> <?php echo ($v== "Display") ? "Hide" : "Display";?> Details</a -->  
 
<a href="<?php $_SERVER['PHP_SELF']?>"> <?php echo ($v== "Display") ? "Hide" : "Display";?> Details</a>  
 
<?php
if ( ($v== "Display") ) { echo detailedStats1 ("" );  }
     
 
}


Function detailedStats1 ($in ) {

$globaldir = "./data/";

// echo ListallFiles("/home3/jorgep98/public_html/dayscheduler.com/salespage/stats/data/");

	 
//	 $files = glob("/path/to/directory/*.{jpg,gif,png}", GLOB_BRACE);
	 $files = glob($globaldir."/databackup*.{zip}", GLOB_BRACE);
	 $files = glob($globaldir."/backups/*.{bkp}", GLOB_BRACE);
	 $files = glob($globaldir."cy*.{csv}", GLOB_BRACE);
	 

	  $html= "";
	  // $html.= $globaldir."<br><br>";
	  $html.= "<b>Log Archives:</b> "."<br>";
	  $displayfilename="";
	  if (empty($files)) {
		  $html .= "No files found";
	  }else{
	  arsort($files);
	  $html = "<div style='width: 70%; background-color: white;'>";
	  $html .='<table class="blueTable"><tr><td>Date</td><td>Page Views</td><td>unique IPs</td><td>Referrers</td><td> - </td></tr>';
	    $alldaysReferrers = array();
	      $alldaysIPs = array();
		 foreach($files as $key => $value)
			{
				$displayfilename = str_replace($globaldir,"",$value);

                
                $file1=$globaldir.$displayfilename;
                $rows = array_map('str_getcsv', file($file1));

                $header = array_shift($rows);
                $csv = array();
                foreach ($rows as $row) {
                  $csv[] = array_combine($header, $row);
                }
                
			  // 
    // $html .= ' <a id="OpenDialog" href="#"> - Click </a>';
			    if (!empty(array_unique_deep($csv, "DATE")[0])) {
			        $date2=array_unique_deep($csv, "DATE")[0];
			    
			    $url0 = $_SERVER['PHP_SELF']."?action=displayday&param=".$date2;    
			    $html .="<tr>";
			    // $html .="<td>".$date2."</td>";
			    $html.= "<td><a href='".$url0."'>".$date2." </a>"." </td>";
			    $html .="<td>".count($csv)."</td>";
			    // AND !($_GET['param']==$date2 )
			    if(!isset($_GET['action']) ||  !($_GET['action']=="listip") || !($_GET['param']==$date2 )  ) { 
			        $html .="<td><a href='".$_SERVER['PHP_SELF']."?action=listip&param=".$date2."'>".count(array_unique_deep($csv, "IP"))."</a></td>";
			    } else {
			         $html .="<td>";
			          $html .= showallinarray(array_unique_deep($csv, "IP") );
			           $html .="</td>";
			    }
			    $html .="<td>".count(array_unique_deep($csv, "REFERRER"))."</td>";
			    $html .="<td>". showallinarray(array_unique_deep($csv, "REFERRER"))."</td>";
			    //$html .="<td>". showfileinhtml($file1)." </td>";
			    $html .="<td> == </td>";
			    $html .="</tr>";
			    }
			    
                            // echo $value;
                $alldaysIPs = array_merge( $alldaysIPs, array_unique_deep($csv, "IP"));
                $alldaysReferrers = array_merge( $alldaysReferrers, array_unique_deep($csv, "REFERRER"));
			}
			$html .="</table></div><br><br><br>";
			
			$html .= "==== TOP REFERRERS<BR>";
			$html .= showallinarray2(array_count_values($alldaysReferrers))."<BR>";	
			$html .= "==== TOP IPS <BR>";
			$html .= showallinarray2(array_count_values($alldaysIPs))."<BR>";	
			
			// $html .="<br>Work in Progress";
			
	  }
return $html;





}


Function getLastAccess($file,$where)
{
$txt="--";

$file= '/home3/jorgep98/public_html/dayscheduler.com/app/prod2/customerfiles/'.$where.'/'.$file;


if (file_exists($file)) {
  $handle=fopen($file, 'r');
  $txt = fgets($handle); // read until first newline
  fclose($handle);

}
return $txt;
}

function CheckInstance( $what, $where ) 
{ // function checks instance and returns values
//  type: 
//  LastUsed: 
//  LastAdmin:

$txt="--";
$file= '/home3/jorgep98/public_html/dayscheduler.com/app/prod2/customerfiles/'.$where.'/customervariables.php';

if (file_exists($file)) { 
   $handle = fopen($file, 'r');
   $valid = false; // init as false
   while (($buffer = fgets($handle)) !== false) {
    if (strpos($buffer, $what) !== false) {
         $valid = TRUE;
         $txt ="Found:".$what;
         $txt=substr($buffer, strpos($buffer, $what)+10 , 4);
         break; // Once you find the string, you should break out the loop.
        }      
   }
   fclose($handle);
}

Return $txt;
}
 
function GetUnconfirmedNumber( $file ) 
{ // function returns arrays of values 
  $input = fopen($file, 'r');  //open for reading
 //  echo $input;
  $count1=0;
  $count0=0;

  
  while( false !== ( $data = fgetcsv($input) ) ){  //read each line as an array
      // Fields: 0=name 1=instancename 2=email 3= 4=dateregistered  5=date-confirmed
        $count0++;
	//  echo $data[0]." / ".$data[1]."<br>";

	 //  if ($data[5] != '') {
          if (empty($data[5]) ) {
		$count1++; 
	   }
  }
return array ($count0,$count1);
}



function getURL()
//getURL function to get URL 
 { 
  /* First check if page is http or https */
    // $whichprotocol = $_SERVER['HTTPS'] == 'on' ? 'https' : 'http';
	 $whichprotocol = "http";
  /* Combine different pieces of $_SERVER variable to return current URL */
     return $whichprotocol.'://'.$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];
 }

function array_unique_deep($array, $key)
{
/**
 * Extract unique values of the specified key in a two dimensional array
 *
 * @param array $array
 * @param mixed $key
 * @return array
 */

  $values = array();
  foreach ($array as $k1 => $row)
  {
    foreach ($row as $k2 => $v)
    {
      if ($k2 == $key)
      {
        $values[ $k1 ] = $v;
        continue;
      }
    }
  }
  
$values = array_values(array_filter(array_unique($values)));
// $values = array_filter($values);
$values = array_filter($values, function($v) { return $v != "NULL"; });
  return $values;
}


Function showallinarray( $arrayin){
    $text="";
    foreach($arrayin as $key => $value)
{
    // $txt.=$key." has the value". $value."<br>";
  $text .=  $value."<br>";
}
    
    return $text;
}

Function showallinarray2 ($arrayin ) {   
    arsort($arrayin);
    $text='<table class="blueTable">';
    foreach($arrayin as $key => $value)
{
    // $txt.=$key." has the value". $value."<br>";
  $text .= "<tr><td>".$key. "</td><td>". $value."</td></tr>";

}

$text .= "</table>";

return  $text;
}
    
Function showfileinhtml($filein)
{
$txt= "<html><body><table>\n\n";
$f = fopen($filein, "r");
while (($line = fgetcsv($f)) !== false) {
        $txt .= "<tr>";
        foreach ($line as $cell) {
                $txt .= "<td>" . htmlspecialchars($cell) . "</td>";
        }
        $txt .= "</tr>\n";
}
fclose($f);
$txt .= "\n</table></body></html>";

return $txt;

}


 Function ListallFiles($globaldir)
 {

Return ($html)	 ;
 }




?>


</body>
</html>
